import sys

from PyQt5.QtCore import Qt
from PyQt5.QtGui import QPainter, QColor, QPen
from PyQt5.QtWidgets import *


class Window(QMainWindow):
    def __init__(self):
        super(Window, self).__init__()
        self.initUI()

    def initUI(self):
        self.setGeometry(50, 50, 1200, 700)
        self.setWindowTitle('Periodic Table')

        # button (справочная информация)
        question = QPushButton('?', self)
        question.setGeometry(85, 20, 105, 30)
        question.setStyleSheet(
            "QPushButton {background-color: #2F3136; border:  none; font-size: 16pt; color: white;}"
            "QPushButton::hover{"
            "background-color: #18181d;"
            "border: none;"
            "}"
        )
        question.clicked.connect(self.open_window)
        # name
        name = QLabel('Periodic Table', self)
        name.setGeometry(415, 100, 400, 50)
        name.setStyleSheet(
            "QLabel{font-size: 22pt;}"
            "QLabel{color: white}"
            "background-color: none"
        )

        # table
        global d
        d = {
            'H': ('1', 'Водород', 'Первый химический элемент, который появился во Вселенной.'), 'He': (
                '2', 'Гелий',
                'Самая низкая температура кипения из всех веществ (-269 С). Впервые был найден на Солнце.'),
            'Li': ('3', 'Литий',
                   'Используют для лечения биполярного расстройства, так как он оказывает успокоительное действие.'),
            'Be': ('4', 'Берилий', 'Образуется при разрушении звёзд. Входит в состав изумруда.'),
            'B': ('5', 'Бор', 'Малые количества бора резко повышают урожайность многих сельскохозяйственных культур.'),
            'C': ('6', 'Углерод',
                  'Его модификацию, '
                  'алмаз, используют во многих сферах, в том числе для производства защитных покрытий.'),
            'N': ('7', 'Азот', 'Используется в подушках безопасности для быстрого надувания.'),
            'O': ('8', 'Кислород', 'Самый распространённый окиcлитель и элемент в земной коре.'),
            'F': (
                '9', 'Фтор',
                'Крайне активный и токсичный, но при этом используется в 20% фармацевтических препаратов.'),
            'Ne': ('10', 'Неон',
                   'Во многих "неоновых лампах" его нет. Им заполнена только газоразрядная, дающая красный цвет.'),
            'Na': ('11', 'Натрий', 'Используют для охлаждения ядерных реакторов. Бурно реагирует с водой.'),
            'Mg': ('12', 'Магний',
                   'Если магний загорается, потушить его практически невозможно, даже водой.'),
            'Al': (
                '13', 'Алюминий', 'Самый распространённый металл. Не задействован ни в одном биохимическом процессе.'),
            'Si': ('14', 'Кремний', 'В шипах крапивы находятся острые мини-лезвия из оксида кремния.'),
            'P': ('15', 'Фосфор', 'Входит в состав головок у спичек.'),
            'S': (
                '16', 'Сера', 'Запах моря и запах утечки газа связаны с одним и тем же веществом - диметилсульфидом.'),
            'Cl': ('17', 'Хлор', 'Запах бассейнам придаёт не хлор, а результат реакции хлора с мочевиной.'),
            'Ar': ('18', 'Аргон', 'Самый распространённый благородный газ. Атмосфера Меркурия содержит до 70% аргона.'),
            'K': ('19', 'Калий',
                  'Используется в составе удобрений для растений. Первый металл, полученный с помощью электричества.'),
            'Ca': ('20', 'Кальций', 'Название происходит от латинского слова calx (мягкий камень).'),
            'Sc': ('21', 'Скандий',
                   'Светильники с йодидом '
                   'скандия применяются в кинопроекторах и прожекторах, освещающих аэропорты и стадионы.'),
            'Ti': (
                '22', 'Титан',
                'Из-за своей инертности применяется для изготовления различных протезов и имплантов зубов.'),
            'V': ('23', 'Ванадий',
                  'Металл, названный в честь скандинавской богини любви, красоты и войны - Ванадис (дочь ванов).'),
            'Cr': ('24', 'Хром', 'Придаёт окраску многим минералам, в том числе изумруду и рубину.'),
            'Mn': ('25', 'Марганец',
                   'В Древнем Египте '
                   'при производстве стекла добавляли смесь оксидов марганца, чтобы добиться большей прозрачности.'),
            'Fe': ('26', 'Железо', 'Из него, как полагают учёные, на 80-90% состоит ядро Земли.'),
            'Co': ('27', 'Кобальт',
                   'Раньше использовался '
                   'только для изготовления пигментов, но с развитием металлургии ситуация поменялась.'),
            'Ni': (
                '28', 'Никель',
                'В 17 веке руду назвали "медью Никкела", который являлся персонажем немецкого фольклора.'),
            'Cu': ('29', 'Медь', 'Есть свидетельства, что инструментами из меди пользовались уже 10 тысяч лет назад.'),
            'Zn': ('30', 'Цинк', 'Защитает сталь от ржавчины, успокаивает солнечные ожоги и препятствует перхоти.'),
            'Ga': ('31', 'Галлий', 'Металл, который плавится при 30 С, при этом температура кипения - все 2400.'),
            'Ge': ('32', 'Германий', 'Единственный неметалл, соединения которого никак не применяются в фармакологии.'),
            'As': ('33', 'Мышьяк',
                   'Запах белого '
                   'мышьяка схож с чесночным, поэтому раньше отравление этим веществом определяли по запаху.'),
            'Se': ('34', 'Селен',
                   'У 80% россиян дефицит селена (на 1999г.), кроме дальневосточников (из-за морепродуктов, 2012г.).'),
            'Br': ('35', 'Бром',
                   'Его производные ежегодно выделяются планктоном и водорослями, и это повреждает озоновый слой.'),
            'Kr': ('36', 'Криптон',
                   'Раньше в СИ метр определялся через длину волны оранжевой линии в спектре атома этого элемента.'),
            'Rb': ('37', 'Рубидий',
                   'Период полураспада '
                   'радиоактивного изотопа рубидия составляет 49.2 миллиарда лет (в ~11 раз больше возраста Земли).'),
            'Sr': ('38', 'Стронций', 'Используется для красных вспышек салютов и сигнальных огней.'),
            'Y': ('39', 'Иттрий', 'Иттрий-алюминиевый гранат используют как имитацию алмазов из-за высокой твёрдости.'),
            'Zr': ('40', 'Цирконий',
                   'Его оксид используют в ультрапрочной керамике, изделия из которой можно заточить острее стальных.'),
            'Nb': ('41', 'Ниобий',
                   'На создание Большого адронного коллайдера было потрачено 1200 тонн кабеля из сплава ниобий-титан.'),
            'Mo': ('42', 'Молибден',
                   'Позволяет бактериям усваивать атмосферный азот, обеспечивая круговорот азота в природе.'),
            'Tc': ('43', 'Технеций',
                   'Первый химический элемент, полученный человеком. Лишь следовые количества есть в земной коре.'),
            'Ru': ('44', 'Рутений',
                   'Единственный существующий в земной коре элемент, официально открытый в России (в Казани).'),
            'Rh': ('45', 'Родий', 'Им покрывают серебро, чтобы оно не темнело. Название происходит от "розы".'),
            'Pd': ('46', 'Палладий',
                   'Поры его кристаллической '
                   'решётки пропускают только водород, поэтому его используют для очистки водорода от примесей.'),
            'Ag': ('47', 'Серебро',
                   'Металлическое серебро убивает большую часть микроорганизмов, но абсолютно безопасно для людей.'),
            'Cd': ('48', 'Кадмий',
                   'Болезнь, вызванная хрроническим отравлением кадмием, с японского переводится как "ой-ой больно".'),
            'In': ('49', 'Индий',
                   'При сгибании чистого индия металл издаёт "крик" - скрип, вызванный перемещением его кристаллитов.'),
            'Sn': ('50', 'Олово',
                   'Сильные морозы в 1812г. '
                   'заставляли оловянные пуговицы на мундирах французских солдат рассыпаться в порошок.'),
            'Sb': ('51', 'Сурьма',
                   '"Сурьмяная война" врачей началась в 1600-х годах из-за вопроса, можно ли лечить сурьмой.'),
            'Te': ('52', 'Теллур', 'Назван в честь Земли (матери-богини небес).'),
            'I': ('53', 'Иод', 'Недостаток йода в рационе приводит к проблемам с щитовидной железой.'),
            'Xe': ('54', 'Ксенон',
                   'Используется в грузоперевозках: '
                   'освещает дорогу автомобилям и помогает в запусках космических кораблей.'),
            'Cs': ('55', 'Цезий',
                   'Используется в атомных часах. Через его свойства определяется время секунды с 1967г.'),
            'Ba': ('56', 'Барий',
                   'Сульфат бария добавляют в детали LEGO, чтобы её было на рентгене, если ребёнок её проглотил.'),
            'La*': ('57', 'Лантан', 'Название переводится как "скрываюсь от взора".'),
            'Ce': ('58', ''), 'Pr': ('59', ''), 'Nd': ('60', ''), 'Pm': ('61', ''), 'Sm': ('62', ''), 'Eu': ('63', ''),
            'Gd': ('64', ''), 'Tb': ('65', ''), 'Dy': ('66', ''), 'Ho': ('67', ''), 'Er': ('68', ''), 'Tm': ('69', ''),
            'Yb': ('70', ''), 'Lu': ('71', ''),
            'Hf': ('72', 'Гафний', 'Металлический гафний проявляет исключительную стойкость к коррозии.'),
            'Ta': ('73', 'Тантал',
                   'Смесь порошкообразных '
                   'тантала и его оксида применяется в аккумуляторах телефонов, ноутбуков и других устройств.'),
            'W': ('74', 'Вольфрам', 'Из него состоят спирали ламп накаливания.'),
            'Re': ('75', 'Рений',
                   'Последний открытый '
                   'элемент со стабильным изотопом. Только у него степени окисления могут быть от -1 до + 7.'),
            'Os': ('76', 'Осмий',
                   'Раньше использовали для нитей ламп накаливания, но сейчас добывают лишь около 100кг в год.'),
            'Ir': ('77', 'Иридий', 'Назван в честь греческой богини радуги - Ириды.'),
            'Pt': ('78', 'Платина',
                   'Раньше испанцы считали, что она - "незрелое золото", и выбрасывали её обратно в реки "дозревать".'),
            'Au': ('79', 'Золото',
                   'Из одного грамма золота можно вытянуть 165 метров золотой проволоки толщиной 20 микрометров.'),
            'Hg': ('80', 'Ртуть',
                   'В процессе выделки фетра '
                   'для шляп раньше применялась ртуть, поэтому шляпники часто страдали от отравления.'),
            'Tl': ('81', 'Таллий',
                   'Агата Кристи в одной '
                   'из своих повестей описала симптомы отравления таллием, и её творчество помогло спасти жизни.'),
            'Pb': ('82', 'Свинец',
                   'Раньше использовался повсеместно: '
                   'в косметике, трубах водоснабжения, белилах и др., несмотря на большую опасность.'),
            'Bi': ('83', 'Висмут', 'Может образовывать из расплава радужные кристаллы причудливой формы.'),
            'Po': ('84', 'Полоний',
                   'Мария Кюри получила вторую '
                   'Нобелевскую Премию в том числе за открытие этого радиоактивного элемента.'),
            'At': ('85', 'Астат', 'Самый редкий элемент на Земле!'),
            'Rn': ('86', 'Радон',
                   'В России минимум в одной '
                   'квартире из трёх на первом этаже концентрация радона может представлять опасность.'),
            'Fr': ('87', 'Франций', 'В земной коре его меньше килограмма. Нигде не используется ни в каком виде.'),
            'Ra': ('88', 'Радий',
                   'Если держать его на руке, за счёт радиоактивного излучения он будет казаться тёплым на ощупь.'),
            'Ac**': ('89', 'Актиний',
                     'Используется в ядерной медицине, чтобы замедлять рост опухолей с помощью облучения.'),
            'Th': ('90', ''), 'Pa': ('91', ''), 'U': ('92', ''), 'Np': ('93', ''), 'Pu': ('94', ''), 'Am': ('95', ''),
            'Cm': ('96', ''), 'Bk': ('97', ''), 'Cf': ('98', ''), 'Es': ('99', ''), 'Fm': ('100', ''),
            'Md': ('101', ''), 'No': ('102', ''), 'Lr': ('103', ''),
            'Rf': ('104', 'Резерфордий', 'США и СССР соперничали за его получение.'),
            'Db': (
                '105', 'Дубний',
                'Очень долго не могли определиться с названием, в итоге назвали в честь города Дубны.'),
            'Sg': ('106', 'Сиборгий', 'Один из двух элементов, названия которым дали при жизни учёных-"крестников".'),
            'Bh': (
                '107', 'Борий',
                'Первый искусственный химический элемент, полученный с помощью холодного слияния ядер.'),
            'Hs': (
                '108', 'Хассий',
                'Химические свойства удалось изучить только спустя 18 лет после открытия - в 2002 году.'),
            'Mt': (
                '109', 'Майтнерий',
                'Единственный химический элемент, названный исключительно в честь женщины-учёного.'),
            'Ds': ('110', 'Дармштадтий',
                   'От рождения до разрушения первого синтезированного нуклида этого элемента прошло 270 микросекунд.'),
            'Rg': ('111', 'Рентгений',
                   'До 2004 года временно назывался унунуний (в переводе - сто одиннадцатый) и обозначался Uuu.'),
            'Cn': ('112', 'Коперниций',
                   'Назван в честь Коперника, с которым в естествознании связывается начало первой научной революции.'),
            'Nh': ('113', 'Нихоний',
                   'Японские исследователи '
                   'очень хотели увидеть Японию в таблице, поэтому назвали открытый элемент в честь неё.'),
            'Fl': ('114', 'Флеровий', 'Получение этого элемента растянулось больше, чем на сорок лет.'),
            'Mc': ('115', 'Московий',
                   'ИЮПАК порекондовал дать '
                   'этому элементу название в честь Московской области, так как в честь Дубны уже был назван Дубний.'),
            'Lv': ('116', 'Ливерморий', 'Самый тяжёлый элемент, названный в честь города.'),
            'Ts': ('117', 'Теннессин',
                   'Блогер предлагала подписать петицию, чтобы назвать его в честь волшебного цвета из книги.'),
            'Og': ('118', 'Оганесон',
                   'Последний полученный на данный момент элемент, назван в честь Оганесяна - академика РАН.')
        }
        btn1 = QPushButton(list(d.keys())[0], self)
        btn2 = QPushButton(list(d.keys())[1], self)
        btn1.resize(70, 40)
        btn1.move(200, 110)
        btn2.resize(70, 40)
        btn2.move(760, 110)
        btn1.setStyleSheet(
            "QPushButton {background-color: #EF6C9A; border:  none; border-radius: 4px;}"
            "QPushButton{font-size: 14pt;}"
            "QPushButton::hover{"
            "background-color: #ffd2cf;"
            "border: none;"
            "}"
        )
        btn2.setStyleSheet(
            "QPushButton {background-color: #EF6C9A; border:  none; border-radius: 4px;}"
            "QPushButton{font-size: 14pt;}"
            "QPushButton::hover{"
            "background-color: #ffd2cf;"
            "border: none;"
            "}"
        )

        count = 2
        for i in range(11):
            period = QLabel(str(i + 1), self)
            period.setGeometry(165, 110 + (i * 50), 70, 40)
            period.setStyleSheet(
                "QLabel{font-size: 14pt;}"
                "QLabel{color: #808080}"
                "QLabel{background-color: none}"
            )
            period.show()

        for i in range(8):
            group = QLabel(str(i + 1), self)
            group.setGeometry(230 + (i * 80), 60, 50, 40)
            group.setStyleSheet(
                "QLabel{font-size: 14pt;}"
                "QLabel{color: white}"
                "QLabel{background-color: none}"
            )
            group.show()

        for i in range(7):
            p = QLabel(str(i + 1), self)
            if i < 3:
                p.setGeometry(110, 110 + (i * 50), 70, 40)
            elif i == 3:
                p.setGeometry(110, 280, 70, 40)
            else:
                p.setGeometry(110, 280 + ((i - 3) * 100), 70, 40)
            p.setStyleSheet(
                "QLabel{font-size: 14pt;}"
                "QLabel{color: white}"
                "QLabel{background-color: none}"
            )
            p.show()
        name_group = QLabel('Группы', self)
        name_group.setGeometry(200, 20, 630, 30)
        name_group.setAlignment(Qt.AlignCenter)
        name_group.setStyleSheet(
            "QLabel{font-size: 14pt;}"
            "QLabel{color: #808080;}"
            "QLabel{background-color: #2F3136;}"
        )
        name_period = QLabel('Периоды', self)
        name_period.setGeometry(85, 60, 105, 40)
        name_period.setAlignment(Qt.AlignCenter)
        name_period.setStyleSheet(
            "QLabel{font-size: 14pt;}"
            "QLabel{color: #808080;}"
            "QLabel{background-color: #2F3136;}"
        )
        global color
        color = ''
        for i in range(10):
            for j in range(8 if i not in [2, 4, 6, 8] else 10):
                count += 1
                if count == 58 or count == 90:
                    count += 14
                a = QPushButton(list(d.keys())[count - 1], self)

                a.resize(70, 40)
                a.move(200 + (j * 80), 160 + (i * 50))
                if 21 <= count <= 30 or 39 <= count <= 48 or 72 <= count <= 80 or 104 <= count <= 112:
                    a.setStyleSheet(
                        "QPushButton {background-color: #61B4CF; border:  none; border-radius: 4px;}"
                        "QPushButton{font-size: 14pt;}"
                        "QPushButton::hover{"
                        "background-color: #ffd2cf;"
                        "border: none;"
                        "}"
                        "QPushButton:pressed {"
                        "background-color: #3AAACF;"
                        "border: none;"
                        "}"
                    )
                    color = '#61B4CF'
                elif count == 57 or count == 89:
                    a.setStyleSheet(
                        "QPushButton {background-color: #8EF13C; border:  none; border-radius: 4px;}"
                        "QPushButton{font-size: 14pt;}"
                        "QPushButton::hover{"
                        "background-color: #ffd2cf;"
                        "border: none;"
                        "}"
                    )
                    color = '#8EF13C'
                elif count <= 4 or count in [11, 12, 19, 20, 37, 38, 55, 56, 87, 88]:
                    a.setStyleSheet(
                        "QPushButton {background-color: #EF6C9A; border:  none; border-radius: 4px;}"
                        "QPushButton{font-size: 14pt;}"
                        "QPushButton::hover{"
                        "background-color: #ffd2cf;"
                        "border: none;"
                        "}"
                    )
                    color = '#EF6C9A'
                else:
                    a.setStyleSheet(
                        "QPushButton {background-color: #FFF073; border:  none; border-radius: 4px;}"
                        "QPushButton{font-size: 14pt;}"
                        "QPushButton::hover{"
                        "background-color: #ffd2cf;"
                        "border: none;"
                        "}"
                    )
                    color = '#FFF073'
                a.clicked.connect(self.handlers_gen)
        # Подключаем кнопки к одному методу
        btn1.clicked.connect(self.handlers_gen)
        btn2.clicked.connect(self.handlers_gen)

        self.show()

    def open_window(self):
        self.second_window = SecondWindow()
        self.second_window.show()

    def handlers_gen(self):

        global k
        k = self.sender().text()

        # Name
        self.wow = QLabel(d[k][1], self)
        self.wow.setGeometry(875, 70, 150, 40)
        self.wow.setStyleSheet(
            "QLabel{font-size: 18pt;}"
            "QLabel{color: white}"
            "QLabel{background-color: none}"
        )
        # Number
        self.wow_number = QLabel(d[k][0], self)
        self.wow_number.setGeometry(1050, 70, 60, 40)
        self.wow_number.setStyleSheet(
            "QLabel{font-size: 28pt;}"
            "QLabel{color: white}"
            "QLabel{background-color: none}"
        )
        self.wow_text = QLabel(d[k][2], self)
        self.wow_text.setGeometry(875, 110, 250, 120)
        self.wow_text.setWordWrap(True)
        self.wow_text.setStyleSheet(
            "QLabel{font-size: 14pt;}"
            "QLabel{color: white}"
            "QLabel{background-color: none}"
        )

        msg = QMessageBox()
        msg.resize(200, 50)
        msg.setWindowTitle(d[k][1])
        msg.setStyleSheet(
            'QMessageBox {background-color: #36393E; font-size: 14pt;}'
            'QMessageBox {color: white;}'
        )

        self.wow.show()
        self.wow_number.show()
        self.wow_text.show()
        # self.show()
        msg.exec_()
        self.wow.clear()
        self.wow_number.clear()
        self.wow_text.clear()

    def wow_close(self):
        self.wow.clear()
        self.wow_number.clear()
        self.wow_text.clear()

    def paintEvent(self, event):
        painter = QPainter()
        painter.begin(self)
        self.drawRectangles1(painter)
        self.drawPeriods(painter)
        self.drawGroups(painter)
        painter.end()

    def drawRectangles1(self, painter):  # Прямоугольник
        painter.setPen(QPen(Qt.black, 2, Qt.NoPen))
        painter.setBrush(QColor('#2F3136'))
        painter.drawRect(855, 60, 290, 175)
        for i in range(11):
            painter.drawRect(155, 110 + (i * 50), 35, 40)

    def drawPeriods(self, painter):
        painter.setPen(QPen(Qt.black, 2, Qt.NoPen))
        painter.setBrush(QColor('#18181d'))
        painter.drawRect(85, 110, 60, 40)  # 1
        painter.drawRect(85, 160, 60, 40)  # 2
        painter.drawRect(85, 210, 60, 40)  # 3
        painter.drawRect(85, 260, 60, 90)  # 4
        painter.drawRect(85, 360, 60, 90)  # 5
        painter.drawRect(85, 460, 60, 90)  # 6
        painter.drawRect(85, 560, 60, 90)  # 7

    def drawGroups(self, painter):
        painter.setPen(QPen(Qt.black, 2, Qt.NoPen))
        painter.setBrush(QColor('#18181d'))
        for i in range(8):
            painter.drawRect(200 + (i * 80), 60, 70, 40)

    def drawLine(self, painter):
        painter.setPen(QPen(Qt.black, 2, Qt.NoPen))
        painter.setBrush(QColor(color))
        painter.drawRect(1150, 60, 10, 100)


class SecondWindow(QWidget):
    def __init__(self):
        super().__init__()
        self.title = 'Справочная информация'
        self.setGeometry(200, 200, 700, 350)
        self.setWindowTitle(self.title)
        self.setStyleSheet(
            'QWidget {background-color: #2F3136; font-size: 14pt;}'
            'QWidget {color: white;}'
        )
        self.wnd_title = QLabel('Справочная информация', self)
        self.wnd_title.resize(700, 40)
        self.wnd_title.setAlignment(Qt.AlignCenter)
        self.wnd_title.setStyleSheet(
            'QLabel {font-size: 18pt; color: #8EF13C}'
        )
        self.wnd_text = ('Перед тобой "Интерактивная таблица Менделеева" от Жадного Фтора :)\n'
                         '\n'
                         'Она позволит узнать что-то новое и интересное про каждый элемент. '
                         'Вот увидишь: химия о-о-очень крутая!\n'
                         '\n'
                         'Вся информация была взята и адаптирована из книги "Химические элементы '
                         'для фанатов Менделеева" А.Курамшина.\n'
                         '\n'
                         'Контактные данные для связи с разработчиком:')
        self.wnd_label = QLabel(self.wnd_text, self)
        self.wnd_label.setWordWrap(True)
        self.wnd_label.setGeometry(50, 40, 600, 250)

        self.label = QLabel(
            '<a href="https://vk.com/zhadniy_ftor" style="text-decoration:none; color:#8EF13C;">ВКонтакте</a>', self)
        self.label.setOpenExternalLinks(True)
        self.label.move(500, 258)
        self.show()


def except_hook(cls, exception, traceback):
    sys.__excepthook__(cls, exception, traceback)


if __name__ == '__main__':
    app = QApplication(sys.argv)
    wnd = Window()
    wnd.setStyleSheet('background-color: #36393E')
    wnd.centralWidget()
    wnd.show()
    sys.excepthook = except_hook
    sys.exit(app.exec())
